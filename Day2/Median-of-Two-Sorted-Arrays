# Median of Two Sorted Arrays
# https://leetcode.com/problems/Median-of-Two-Sorted-Arrays/
# Difficulty: Hard

class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        if len(nums1) > len(nums2):
            nums1, nums2 = nums2, nums1
        x, y = len(nums1), len(nums2)
        low, high = 0, x
        while low <= high:
            X = (low+high)//2
            Y = (x+y+1)//2-X
            maxLeftX = float('-inf') if X == 0 else nums1[X-1]
            minRightX = float('inf') if X == x else nums1[X]
            maxLeftY = float('-inf') if Y == 0 else nums2[Y-1]
            minRightY = float('inf') if Y == y else nums2[Y]
            if maxLeftX <= minRightY and maxLeftY <= minRightX:
                if (x+y)%2 == 0:
                    return (max(maxLeftX, maxLeftY)+min(minRightX, minRightY))/2
                else:
                    return max(maxLeftX, maxLeftY)
            elif maxLeftX > minRightY:
                high = X-1
            else:
                low = X+1
